# -*- coding: utf-8 -*-
"""DIP_Lab_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13Nu1H8eUTlGVaUQkzd9h8z-TYZd8aiks
"""

"""**Filtering with Convolution**"""

pip install -U scikit-image

#importing necessary packages
import cv2
from skimage.exposure import rescale_intensity
import numpy as np


#Defining the Convolution Function here
def convol(image, kernel):

	(iH, iW) = image.shape[:2]
	(kH, kW) = kernel.shape[:2]

	pad = (kW - 1) // 2

	image = cv2.copyMakeBorder(image, pad, pad, pad, pad, cv2.BORDER_REPLICATE)
	output = np.zeros((iH, iW), dtype="float32")
 
	for y in np.arange(pad, iH + pad):
		for x in np.arange(pad, iW + pad):
			roi = image[y - pad:y + pad + 1, x - pad:x + pad + 1]
			k = (roi * kernel).sum()
			output[y - pad, x - pad] = k

	output = rescale_intensity(output, in_range=(0, 255))
	output = (output * 255).astype("uint8")
 
	return output

# Robertsedge operator
kernel_Roberts_g1 = np.array([
    [1, 0],
    [0, -1]
    ])
kernel_Roberts_g2 = np.array([
    [0, -1],
    [1, 0]
    ])

# Prewitt Operator
# Vertical_Prewitt Operator 
Vert_Prewitt = np.array((
	[-1, 0, 1],
	[-1, 0, 1],
	[-1, 0, 1]))

# Horizontal_Prewitt Operator 
Horiz_Prewitt = np.array((
	[-1, -1, -1],
	[0, 0, 0],
	[1, 1, 1]))

# Laplacian Operator 
# For a = 0
laplaciana0 = np.array((
	[0, 1, 0],
	[1, -4, 1],
	[0, 1, 0]))

# For a = 0.5
laplacianaHalf = np.array((
	[1, 1, 1],
	[1, -8, 1],
	[1, 1, 1]))


# Vertical Sobel Operator
Vert_sobel = np.array((
	[-1, 0, 1],
	[-2, 0, 2],
	[-1, 0, 1]))


# Horizontal Sobel Operator
Horiz_sobel = np.array((
	[-1, -2, -1],
	[0, 0, 0],
	[1, 2, 1]))

image = cv2.imread('D:/Study Materials/Study/Lab/RUET-Lab-Works/4-1/CSE 4106 (Digital Image Processing)/Lab 3/Scene.jpg',cv2.IMREAD_GRAYSCALE)

VertPrewittconvoleOutput = convol(image, Vert_Prewitt)

print("Original Image --->\n")
cv2_imshow(image)
print()

print("Vertical Prewitt Convolution --->\n")
cv2_imshow(VertPrewittconvoleOutput)

HorizPrewittconvoleOutput = convol(image, Horiz_Prewitt)

print("Original Image --->\n")
cv2_imshow(image)
print()

print("Horizontal Prewitt Convolution --->\n")
cv2_imshow(HorizPrewittconvoleOutput)

Vert_sobel_convoleOutput = convol(image, Vert_sobel)

print("Original Image --->\n")
cv2_imshow(image)
print()

print("Vertical Sobel Convolution --->\n")
cv2_imshow(Vert_sobel_convoleOutput)

Horiz_sobel_convoleOutput = convol(image, Horiz_sobel)

print("Original Image --->\n")
cv2_imshow(image)
print()

print("Horizontal Sobel Convolution --->\n")
cv2_imshow(Horiz_sobel_convoleOutput)

Lapa0convoleOutput = convol(image, laplaciana0)

print("Original Image --->\n")
cv2_imshow(image)
print()

print("Laplacian Convolution (For a=0)--->\n")
cv2_imshow(Lapa0convoleOutput)

LapahalfconvoleOutput = convol(image, laplacianaHalf)

print("Original Image --->\n")
cv2_imshow(image)
print()

print("Laplacian Convolution (For a=0.5)--->\n")
cv2_imshow(LapahalfconvoleOutput)

