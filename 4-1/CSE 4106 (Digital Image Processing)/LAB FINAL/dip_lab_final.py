# -*- coding: utf-8 -*-
"""DIP Lab Final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17amxBlG9GU8IFHAIE5pqohPbDkEU4QP4

# Submitted By

*   **Name:** Md. Shabir Khan Akash
*   **Roll:** 1603108
*   **Section:** B


# Submitted To

*   Dr. Md. Al Mamun
*   Professor
*   Department of CSE, RUET

# **Question 2**
"""

from PIL import Image, ImageOps
import matplotlib.pyplot as plt
import numpy as np
import cv2
from cv2 import imread
from google.colab.patches import cv2_imshow
import imutils
import copy

"""# **Original Image (Blur and Sharp)**"""

imageblur = cv2.imread('/content/drive/MyDrive/DIP Lab/Lab Final/image_blur.jpg',cv2.IMREAD_GRAYSCALE)
imagesharp = cv2.imread('/content/drive/MyDrive/DIP Lab/Lab Final/image_sharp.jpg',cv2.IMREAD_GRAYSCALE)

print('Original Blur Image')
print()
cv2_imshow(imageblur)

print('Original Sharp Image')
print()
cv2_imshow(imagesharp)

"""# **Gaussian Filter on Blur Image**"""

gaus_image = copy.deepcopy(imageblur)
for i in range(1, imageblur.shape[0]-1):
    for j in range(1, imageblur.shape[1]-1):
        sum_image = sum([imageblur[l, k] for l in range(i-1, i+2) for k in range(j-1, j+2)])
        gaus_image [i, j] = int(sum_image/9)

print('Gaussian Filtered Image on Blur Image')
cv2_imshow(gaus_image)

"""# **Gaussian Filter on Sharp Image**"""

gaus_image = copy.deepcopy(imagesharp)
for i in range(1, imagesharp.shape[0]-1):
    for j in range(1, imagesharp.shape[1]-1):
        sum_image = sum([imagesharp[l, k] for l in range(i-1, i+2) for k in range(j-1, j+2)])
        gaus_image [i, j] = int(sum_image/9)

print('Gaussian Filtered Image on Sharp Image')
cv2_imshow(gaus_image)

"""# **Sharpening Filter on Blur Image**"""

sharp_img = copy.deepcopy(imageblur)
for i in range(1, imageblur.shape[0]-1):
    for j in range(1, imageblur.shape[1]-1):
        tmp = imageblur[i-1, j-1] + imageblur[i-1, j] + imageblur[i-1, j+1] + imageblur[i, j-1] + \
                imageblur[i, j+1] + imageblur[i+1, j-1] + imageblur[i+1, j] + imageblur[i+1, j+1] - 8*imageblur[i, j]
        sharp_img[i, j] = imageblur[i, j] - tmp

print('Sharpening Filtered Image on Blur Image:')
cv2_imshow(sharp_img)

"""# **Sharpening Filter on Sharped Image**"""

sharp_img = copy.deepcopy(imagesharp)
for i in range(1, imagesharp.shape[0]-1):
    for j in range(1, imagesharp.shape[1]-1):
        tmp = imagesharp[i-1, j-1] + imagesharp[i-1, j] + imagesharp[i-1, j+1] + imagesharp[i, j-1] + \
                imagesharp[i, j+1] + imagesharp[i+1, j-1] + imagesharp[i+1, j] + imagesharp[i+1, j+1] - 8*imagesharp[i, j]
        sharp_img[i, j] = imagesharp[i, j] - tmp

print('Sharpening Filtered Image on Sharped Image:')
cv2_imshow(sharp_img)

