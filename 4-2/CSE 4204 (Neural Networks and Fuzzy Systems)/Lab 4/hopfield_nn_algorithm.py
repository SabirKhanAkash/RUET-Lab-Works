# -*- coding: utf-8 -*-
"""Hopfield NN_Algorithm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BdxVeb5_d267NIxDt3VRk92ggZSTYmxu
"""

import numpy as np, numpy.random  

trainX = np.array([1,-1,-1,1,1]).reshape(1,5)
y = np.array([-1,-1,1,-1,1]).reshape(1,5)
target = np.array([1,0,0,1,1]).reshape(1,5)

print("Input x: ",trainX)

w = np.matmul(trainX.transpose(),trainX)

print("\nTraining Phase\n-------------------------------------------------------\nWeight Matrix: ")
np.fill_diagonal(w, 0)
print(w)
print("-------------------------------------------------------")

print("Initial y: ",target)
for a in range(5):
    # print("a=",a,target[0:,a])
    # print("a=",a,np.matmul(target,w[:,a]))
    print("\nTraining Cycle: ",a)
    print("-------------------------------------------------------")
    y[0:,a] = target[0:,a] + np.matmul(target,w[:,a])
    if(y[0:,a] > 0):
        y[0:,a] = 1
    elif(y[0:,a] < 0):
        y[0:,a] = 0

    print(y)
    print("-------------------------------------------------------")

print("\nTraining Complete!!! \nTrained Target Output y: ", y )


print("\n\n-------------------------------------------------------")
print("Testing Phase")
print("-------------------------------------------------------")
testX = np.array([1,0,1,0,1]).reshape(1,5)
print("Testing Input x: ",testX)

flag = 0
while(1):
    for a in range(5):
        print("-------------------------------------------------------")
        print("\nTesting Cycle: ",a)
        print("-------------------------------------------------------")
        y[0:,a] = testX[0:,a] + np.matmul(testX,w[:,a])
        if(y[0:,a] > 0):
            y[0:,a] = 1
        elif(y[0:,a] < 0):
            y[0:,a] = 0
        
        # print(y)
        # # print(y.all())
        # # print(target.all())
        # print(target)
        # y = np.array([1,-1,1,-1]).reshape(1,4)
        if(np.array_equal(y, target)):
            print("\nConverged")
            flag = 1;
            break;
    if(flag == 1):
        break;
    a = 0

print("\nTesting Complete!!! \nFinal Target Output matched with previous y: ", y )